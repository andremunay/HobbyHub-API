name: CI-CD

on:
  pull_request:
    branches: [ "**" ]
  push:
    branches: [ "**" ]

env:
  REGISTRY: ghcr.io/andremunay/hobbyhub-api

jobs:

  build-test:
    runs-on: ubuntu-latest
    

    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Cache Testcontainers
        uses: actions/cache@v4
        with:
          path: ~/.testcontainers
          key: ${{ runner.os }}-testcontainers-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-testcontainers-

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build & Run Tests (with coverage)
        run: ./mvnw -B clean verify

      - name: Archive JaCoCo Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build & push branch image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.REGISTRY }}:${{ github.head_ref || github.ref_name }}

      - name: Push :latest tag (main only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.REGISTRY }}:latest

  deploy-prod:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4      
          
      - name: Deploy to Fly.io
        uses: superfly/flyctl-actions@1.4
        with:
          args: >
            deploy
            --image ${{ env.REGISTRY }}:latest
            --app hobbyhub-api
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          REGISTRY_AUTH_USERNAME:  ${{ secrets.GHCR_USERNAME }}
          REGISTRY_AUTH_TOKEN:     ${{ secrets.GHCR_TOKEN }}
